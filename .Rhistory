udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Alexander")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
tail(mtcars, 3)
mean(mtcars$mpg)
```{r}
summary(mtcars)
```
efficient <- mtcars[mpg >= 23]
efficient <- mtcars[mtcars$mpg >= 23]
efficient <- subset(mtcars, mtcars$mpg >= 23)
nrow(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
mtcars$year <- c(1973, 1974)
install.packages('knitr', dependencies = T)
library(knitr)
subset(mtcars, mpg >= 30 | hp > 60)
subset(mtcars, mpg >= 30 | hp < 60)
install.packages('ggplot2', dependencies = T)
йздще()
qplot()
install.packages('ggplot2', dependencies = T)
library(ggplot2)
install.packages('colorspace', dependencies = T)
library(ggplot2)
install.packages('knitr', dependencies = T)
library(knitr)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(ggplot2)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(GGally)
library(scales)
library(memisc)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(scales)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (lliog10) by Cube-Root of Carat')
library(scales)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (lliog10) by Cube-Root of Carat')
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("GGally", lib.loc="~/R/win-library/3.2")
library("gridExtra", lib.loc="~/R/win-library/3.2")
library("MASS", lib.loc="~/R/win-library/3.2")
library("plyr", lib.loc="~/R/win-library/3.2")
library("scales", lib.loc="~/R/win-library/3.2")
install.packages('RColorBrewer', dependencies = TRUE)
library(RColorBrewer)
data <- read.csv('C:\\avb\\Workspace\\Project105\\svn\\python\\data\\baza2_upd_1.csv')
library("ggplot2", lib.loc="~/R/win-library/3.2")
qplot(x = num_products, data = data)
qplot(x = num_products, data = data[which(Продукт_НС = 1)])
qplot(x = num_products, data = data[which(Продукт_НС == 1)])
View(data)
data <- read.csv('C:\\avb\\Workspace\\Project105\\svn\\python\\data\\baza2_upd_1.csv', encoding="UTF-8")
qplot(x = num_products, data = data[which(Продукт_НС == 1)])
rgs1 <- read.csv('C:\\avb\\Workspace\\Project105\\svn\\python\\data\\baza2_upd_1.csv', encoding="UTF-8")
View(data)
rgs1 <- read.csv('C:\\avb\\Workspace\\Project105\\svn\\python\\data\\baza2_upd_1.csv', encoding="UTF-8")
qplot(x = num_products, data = rgs1[which(rgs1$Продукт_НС == 1)])
qplot(x = num_products, data = rgs1[which(Продукт_НС == 1)])
qplot(x = num_products, data = rgs1[which(Продукт_НС == 1),])
qplot(x = num_products, data = subset(rgs1, Продукт_НС == 1,))
ggplot(rgs1, aes(x = num_products)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=percent)
ggplot(rgs1, aes(x = num_products)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = percent_format())
ggplot(rgs1, aes(x = num_products)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
head(rgs1)
ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p1 <- ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p2 <- ggplot(subset(rgs1, Продукт_НСЖ = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p3 <- ggplot(subset(rgs1, Продукт_МАРС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p4 <- ggplot(subset(rgs1, Продукт_Живой.процент = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p5 <- ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
multiplot(p1, p2, p3, p4, p5)
library("gridExtra", lib.loc="~/R/win-library/3.2")
p1 <- ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p2 <- ggplot(subset(rgs1, Продукт_НСЖ = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p3 <- ggplot(subset(rgs1, Продукт_МАРС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p4 <- ggplot(subset(rgs1, Продукт_Живой.процент = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p5 <- ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
multiplot(p1, p2, p3, p4, p5)
p1 <- ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p2 <- ggplot(subset(rgs1, Продукт_НСЖ = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p3 <- ggplot(subset(rgs1, Продукт_МАРС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p4 <- ggplot(subset(rgs1, Продукт_Живой.процент = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p5 <- ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
grid.arrange(p1, p2, p3, p4, p5)
p1 <- ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p2 <- ggplot(subset(rgs1, Продукт_НСЖ = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p3 <- ggplot(subset(rgs1, Продукт_МАРС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p4 <- ggplot(subset(rgs1, Продукт_Живой.процент = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p5 <- ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
grid.arrange(p1, p2, p3, p4, p5)
rgs1 <- read.csv('C:\\avb\\Workspace\\Project105\\svn\\python\\data\\baza2_upd.csv', encoding="UTF-8")
p_all <- qplot(x = num_products, data = rgs1)
p1 <- ggplot(subset(rgs1, Продукт_НС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p2 <- ggplot(subset(rgs1, Продукт_НСЖ = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p3 <- ggplot(subset(rgs1, Продукт_МАРС = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p4 <- ggplot(subset(rgs1, Продукт_Живой.процент = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
p5 <- ggplot(subset(rgs1, Продукт_Пенсия = 1,), aes(x = num_products)) + geom_bar(aes(y = (..count..)/sum(..count..)))
grid.arrange(p1, p2, p3, p4, p5)
setwd("C:\\avb\\Workspace\\Udacity\\Data Analysis with R\\Data-Analysis-with-R")
loanData <- read.csv("prosperLoanData.csv")
qplot(x = ListingCategory..numeric., data = loanData, binwidth = 1)
qplot(x = ListingCategory..numeric., data = loanData, binwidth = 1)
library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("gridExtra", lib.loc="~/R/win-library/3.2")
qplot(x = ListingCategory..numeric., data = loanData, binwidth = 1)
qplot(x = ListingCategory..numeric., data = loanData, binwidth = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
loanData$ListingCategory <-as.factor(loanData$ListingCategory..numeric.)
levels(loanData$ListingCategory) <- c("Not Available",
"Debt Consolidation",
"Home Improvement",
"Business",
"Personal Loan",
"Student Use",
"Auto",
"Other",
"Baby&Adoption",
"Boat",
"Cosmetic Procedure",
"Engagement Ring",
"Green Loans",
"Household Expenses",
"Large Purchases",
"Medical/Dental",
"Motorcycle",
"RV",
"Taxes",
"Vacation",
"Wedding Loans")
qplot(x = ListingCategory, data = loanData, binwidth = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(x = BorrowerRate, data = loanData) + facet_wrap(~Term) +
ggtitle("BorrowRate histograms per Terms")
ggplot(aes(x = DebtToIncomeRatio, y = BorrowerRate),
data = subset(loanData,
DebtToIncomeRatio <= quantile(DebtToIncomeRatio,
0.99, na.rm = TRUE))) +
geom_point(alpha = 1/100) +
#  geom_line(stat = 'summary', fun.y = mean, linetype = 2, color = 2) +
geom_smooth() +
ggtitle("BorrowRate from DebtToIncomeRatio")
ggplot(aes(x = Term, y = BorrowerRate),
data = loanData) + geom_point(alpha = 1/100) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2, color = 2) +
ggtitle("BorrowRate from Term in months")
ggplot(aes(x = jitter(Term), y = BorrowerRate), data = loanData) +
geom_point(alpha = 1/50) +
geom_smooth(color=2) +
ggtitle("BorrowRate from Term in months")
ggpairs(loanData)
library(GGally)
ggpairs(loanData)
